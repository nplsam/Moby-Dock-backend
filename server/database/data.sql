DROP TABLE IF EXISTS books;
-- DROP TABLE IF EXISTS user_account;
-- DROP TABLE IF EXISTS token;

CREATE TABLE books (
    id INT GENERATED ALWAYS AS IDENTITY, 
    name VARCHAR (100) NOT NULL,
    author VARCHAR (50) NOT NULL,
    genre VARCHAR (30) NOT NULL,
    reserved BOOLEAN SET default FALSE;
    PRIMARY KEY (id)
);

INSERT INTO books (name, author, genre)
VALUES
    ('Moby-Dick', 'Herman Melville', 'Fiction'),
    ('The Great Gatsby', 'F. Scott Fitzgerald', 'Tragedy'),
    ('Pride and Prejudice', 'Jane Austen', 'Romance'),
    ('The Da Vinci Code', 'Dan Brown', 'Crime Thriller'),
    ('Harry Potter and the Deathly Hallows', 'J.K. Rowling', 'Fiction'),
    ('Harry Potter and the Philosophers Stone', 'J.K. Rowling', 'Fiction'),
    ('Fifty Shades of Grey', 'E.L. James', 'Romance'),
    ('Harry Potter and the Goblet of Fire', 'J.K. Rowling', 'Fiction'),
    ('Harry Potter and the Chamber of Secrets', 'J.K. Rowling', 'Fiction'),
    ('Harry Potter and the Prisoner of Azkaban', 'J.K. Rowling', 'Fiction'),
    ('Angels and Demons', 'Dan Brown', 'Crime Thriller'),
    ('Harry Potter and the Half-blood Prince', 'J.K. Rowling', 'Fiction'),
    ('Fifty Shades Darker', 'E.L. James', 'Romance'),
    ('Twilight', 'Stephenie Meye', 'Fiction'),
    ('Girl with the Dragon Tattoo, The:Millennium Trilogy', 'Stieg Larsson', 'Crime Thriller'),
    ('Fifty Shades Freed', 'E.L. James', 'Romance'),
    ('The Lost Symbol', 'Dan Brown', 'Crime Thriller'),
    ('New Moon', 'Stephenie Meyer', 'Fiction'),
    ('Deveption Point', 'Dan Brown', 'Crime Thriller'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('The Lovely Bones', 'Alice Sebold', 'Fiction'),
    ('Digital Fortress', 'Dan Brown', 'Crime Thriller'),
    ('The Curious Incident of the Dog in the Night-time', 'Mark Haddon', 'Crime Thriller')
    ('A Short History of Nearly Everything', 'Bill Bryson', 'Science'),
    ('Girl Who Played with Fire,The:Millennium Trilogy', 'Stieg Larsson', 'Crime Thriller'),
    ('Breaking Dawn', 'Stephenie Meyer', 'Fiction')
    ('Very Hungry Caterpillar,The:The Very Hungry Caterpillar', 'Eric Carle', 'Picture Books'),
    ('The Gruffalo', 'Eric Carle', 'Picture Books'),
    ('Jamies 30-Minute Meals', 'Jamie Oliver', 'Cook Book'),
    ('The Kite Runner', 'Khaled Hosseini', 'Fiction'),
    ('One Day', 'David Nicholls', 'Fiction'),
    ('A Thousand Splendid Suns', 'Stephenie Meyer', 'Fiction'),
    ('Girl Who Kicked the Hornets Nest,The:Millennium Trilogy', 'Stieg Larsson', 'Crime Thriller'),
    ('The Time Travelers Wife', 'Audrey Niffenegger', 'Fiction'),
    ('Atonement', 'Ian McEwan', 'Fiction'),
    ('Bridget Jones Diary:A Novel', 'Pan Macmillan', 'Fiction'),
    ('The World According to Clarkson', 'Jeremy Clarkson', 'Humour'),
    ('Captain Corellis Mandolin', 'Louis de Bernieres', 'Fiction'),
    ('The Sound of Laughter', 'Peter Kay', 'Autobiography'),
    ('Life of Pi', 'Yann Martel', 'Fiction'),
    ('Billy Connolly', 'Pamela Stephenson', 'Biography'),
    ('A Child Called It', 'Dave Pelzer', 'Autobiography'),
    ('The Gruffalos Child', 'Dave Pelzer', 'Autobiography'),
    ('Angelas Ashes:A Memoir of a Childhood', 'Frank McCourt', 'Autobiography'),
    ('Birdsong', 'Sebastian Faulks', 'Fiction'),
    ('S.Northern Lights:His Dark Materials', 'Philip Pullman', 'Fiction'),
    ('Labyrinth', 'Kate Mosse', 'Fiction'),
    ('Harry Potter and the Half-blood Prince', 'J.K. Rowling', 'Fiction'),
    ('The Help', 'Kathryn Stockett', 'Fiction'),
    ('Man and Boy', 'Tony Parsons', 'Fiction'),
    ('Memoirs of a Geisha', 'Arthur Golden', 'Fiction'),
    ('No.1 Ladies Detective Agency,The:No.1 Ladies Detective Agency', 'Alexander McCall Smith', 'Crime Thriller'),
    ('The Island', 'Victoria Hislop', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),
    ('Eclipse', 'Stephenie Meyer', 'Fiction'),


-- CREATE TABLE user_account (
--     user_id INT GENERATED ALWAYS AS IDENTITY,
--     username VARCHAR(30) UNIQUE NOT NULL,
--     password CHAR(60) NOT NULL,
--     PRIMARY KEY (user_id)
-- );

-- CREATE TABLE token (
--     token_id INT GENERATED ALWAYS AS IDENTITY,
--     user_id INT NOT NULL,
--     token CHAR(36) UNIQUE NOT NULL,
--     PRIMARY KEY (token_id),
--     FOREIGN KEY (user_id) REFERENCES user_account("user_id")
-- );
